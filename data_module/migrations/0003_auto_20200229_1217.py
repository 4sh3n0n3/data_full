# Generated by Django 3.0.3 on 2020-02-29 09:17

import data_module.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('data_module', '0002_auto_20200227_2244'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_name', models.CharField(max_length=20, unique=True, verbose_name='Физическое наименование типа')),
            ],
            options={
                'verbose_name_plural': 'Базовые типы',
            },
        ),
        migrations.CreateModel(
            name='CustomConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_unique', models.BooleanField(default=False, help_text='Если активно, то значения типа должны быть уникальны в рамках набора данных исследования. Исследователь будет предупрежден об ошибке данных, при обнаружении дубликации.', verbose_name='Уникальность')),
            ],
            options={
                'verbose_name_plural': 'Пользовательские ограничения типов',
            },
        ),
        migrations.CreateModel(
            name='CustomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('description', models.TextField(blank=True, verbose_name='Описание типа')),
                ('is_active', models.BooleanField(default=True, help_text='Неактивные типы недоступны для выбора исследователями. Используется вместо удаления типа.', verbose_name='Активность')),
                ('base_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_types', to='data_module.BaseType', verbose_name='Базовый тип')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_types', to=settings.AUTH_USER_MODEL, verbose_name='Создатель типа')),
            ],
            options={
                'verbose_name_plural': 'Пользовательские типы',
            },
        ),
        migrations.CreateModel(
            name='CustomValidator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование')),
                ('regexp', models.TextField(verbose_name='Регулярное выражение')),
                ('error_mess', models.CharField(max_length=400, verbose_name='Сообщение об ошибке')),
                ('error_type', models.CharField(choices=[('WARN', 'Предупреждение'), ('ERROR', 'Ошибка')], max_length=10, verbose_name='Тип исключения')),
                ('description', models.TextField(blank=True, verbose_name='Описание валидатора')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_validators', to=settings.AUTH_USER_MODEL, verbose_name='Создатель валидатора')),
            ],
            options={
                'verbose_name_plural': 'Пользовательские валидаторы',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_datasets', to=settings.AUTH_USER_MODEL, verbose_name='Создатель набора данных')),
                ('owner', models.ForeignKey(default=data_module.models.Dataset.creator, on_delete=django.db.models.deletion.DO_NOTHING, related_name='owned_datasets', to=settings.AUTH_USER_MODEL, verbose_name='Владелец набора данных')),
            ],
            options={
                'verbose_name_plural': 'Наборы данных',
            },
        ),
        migrations.AlterField(
            model_name='research',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_researches', to=settings.AUTH_USER_MODEL, verbose_name='Создатель исследования'),
        ),
        migrations.CreateModel(
            name='ValidatorToConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constraint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validator_relation_entries', to='data_module.CustomConstraint')),
                ('validator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constraint_relation_entries', to='data_module.CustomValidator')),
            ],
        ),
        migrations.CreateModel(
            name='Header',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('custom_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='type_headers', to='data_module.CustomType', verbose_name='Тип данных')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_headers', to='data_module.Dataset', verbose_name='Набор данных')),
            ],
            options={
                'verbose_name_plural': 'Заголовки',
                'unique_together': {('name', 'dataset')},
            },
        ),
        migrations.CreateModel(
            name='FieldGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Наименование')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
                ('description', models.TextField(blank=True, verbose_name='Описание типа')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_field_groups', to=settings.AUTH_USER_MODEL, verbose_name='Создатель группы')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_groups', to='data_module.FieldGroup', verbose_name='Группа')),
            ],
            options={
                'verbose_name_plural': 'Группы типов',
            },
        ),
        migrations.CreateModel(
            name='DatasetToResearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='research_relation_entries', to='data_module.Dataset')),
                ('research', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_relation_entries', to='data_module.Research')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='researches',
            field=models.ManyToManyField(related_name='datasets', through='data_module.DatasetToResearch', to='data_module.Research', verbose_name='Связанные исследования'),
        ),
        migrations.CreateModel(
            name='DataRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.BigIntegerField(default=1, editable=False)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dataset_rows', to='data_module.Dataset', verbose_name='Набор данных')),
            ],
            options={
                'verbose_name_plural': 'Строки данных',
            },
        ),
        migrations.AddField(
            model_name='customtype',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_types', to='data_module.FieldGroup', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='customconstraint',
            name='custom_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='constraints', to='data_module.CustomType', verbose_name='Пользовательский тип'),
        ),
        migrations.AddField(
            model_name='customconstraint',
            name='validators',
            field=models.ManyToManyField(related_name='created_constraints', through='data_module.ValidatorToConstraint', to='data_module.CustomValidator', verbose_name='Валидаторы'),
        ),
        migrations.CreateModel(
            name='CellEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('data_row', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cells', to='data_module.DataRow', verbose_name='Строка')),
                ('header', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='data_module.Header', verbose_name='Заголовок')),
            ],
            options={
                'verbose_name_plural': 'Ячейки данных',
            },
        ),
    ]
